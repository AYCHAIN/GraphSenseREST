# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

GET     /                                  controllers.BlockController.index
GET     /search                            controllers.BlockController.search(q, limit: Int ?= 50)

GET     /block/:height                     controllers.BlockController.block(height: Int)
GET     /block/:height/transactions        controllers.BlockController.transactions(height: Int)
GET     /tx/:hash                          controllers.BlockController.transaction(hash)
#GET     /tx/:hash/in                       controllers.BlockController.inputs(hash)
#GET     /tx/:hash/out                      controllers.BlockController.outputs(hash)
GET     /address/:address                  controllers.BlockController.address(address)
GET     /address/:address/tags             controllers.BlockController.tags(address)
GET     /address/:address/implicitTags     controllers.BlockController.implicitTags(address)
GET     /address/:address/cluster          controllers.BlockController.entityByAddress(address)
#GET     /address/:address/stats            controllers.BlockController.addressStats(address)
GET     /address/:address/transactions     controllers.BlockController.addressTransactions(address, limit: Int ?= 100)
#GET     /address/:address/relations/in     controllers.BlockController.inRelations(address, limit: Int ?= 100)
#GET     /address/:address/relations/out    controllers.BlockController.outRelations(address, limit: Int ?= 100)
GET     /address/:address/egonet           controllers.BlockController.egoNet(address, direction ?= "", minAvgValue: Long ?= 0, limit: Int ?= 50)
GET     /cluster/:id                       controllers.BlockController.entity(id: Long)
GET     /cluster/:id/addresses             controllers.BlockController.addresses(id: Long, limit: Int ?= 100)
GET     /cluster/:id/tags                  controllers.BlockController.clusterTags(id: Long)
GET     /cluster/:id/egonet                controllers.BlockController.clusterEgoNet(id: Long, direction ?= "", minAvgValue: Long ?= 0, limit: Int ?= 50)


# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file                      controllers.Assets.versioned(path="/public", file: Asset)
